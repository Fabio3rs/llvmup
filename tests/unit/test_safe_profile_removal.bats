#!/usr/bin/env bats

# Test safe profile removal functionality

setup() {
    export TEST_TEMP_DIR="$(mktemp -d)"
    export TEST_PROFILE="$TEST_TEMP_DIR/test_profile"
    export UNINSTALL_SCRIPT="./uninstall.sh"
}

teardown() {
    rm -rf "$TEST_TEMP_DIR"
}

@test "safe removal with new-format markers" {
    # Create a test profile with new format and user content
    cat > "$TEST_PROFILE" << 'EOF'
# My personal settings
export MY_IMPORTANT_VAR="important"
alias myalias="echo hello"

# LLVM Manager Functions - Start
# Auto-generated by LLVMUP installer - safe to remove
if [ -f "$HOME/.local/bin/llvm-functions.sh" ]; then
    source "$HOME/.local/bin/llvm-functions.sh"
fi
# LLVM Manager Functions - End

# More user settings
export ANOTHER_VAR="also important"
EOF

    # Test the safe removal function
    source "$UNINSTALL_SCRIPT"
    safe_remove_from_profile "$TEST_PROFILE"

    # Check that LLVM config is removed
    ! grep -q "LLVM Manager Functions" "$TEST_PROFILE"
    ! grep -q "llvm-functions.sh" "$TEST_PROFILE"

    # Check that user content is preserved
    grep -q "MY_IMPORTANT_VAR" "$TEST_PROFILE"
    grep -q "myalias" "$TEST_PROFILE"
    grep -q "ANOTHER_VAR" "$TEST_PROFILE"

    # Check backup was created
    [ -f "$TEST_PROFILE.llvmup-backup" ]
}

@test "safe removal with old format (without markers)" {
    # Create a test profile with old format and user content
    cat > "$TEST_PROFILE" << 'EOF'
# My personal settings
export MY_IMPORTANT_VAR="important"
alias myalias="echo hello"

# LLVM Manager Functions
if [ -f "$HOME/.local/bin/llvm-functions.sh" ]; then
    source "$HOME/.local/bin/llvm-functions.sh"
fi

# More user settings
export ANOTHER_VAR="also important"
EOF

    # Test the safe removal function
    source "$UNINSTALL_SCRIPT"
    safe_remove_from_profile "$TEST_PROFILE"

    # Check that LLVM config is removed
    ! grep -q "LLVM Manager Functions" "$TEST_PROFILE"
    ! grep -q "llvm-functions.sh" "$TEST_PROFILE"

    # Check that user content is preserved
    grep -q "MY_IMPORTANT_VAR" "$TEST_PROFILE"
    grep -q "myalias" "$TEST_PROFILE"
    grep -q "ANOTHER_VAR" "$TEST_PROFILE"

    # Check backup was created
    [ -f "$TEST_PROFILE.llvmup-backup" ]
}

@test "handles profile with no LLVM configuration" {
    # Create a test profile with only user content
    cat > "$TEST_PROFILE" << 'EOF'
# My personal settings
export MY_IMPORTANT_VAR="important"
alias myalias="echo hello"
EOF

    # Test the safe removal function
    source "$UNINSTALL_SCRIPT"
    safe_remove_from_profile "$TEST_PROFILE"

    # Check that user content is preserved
    grep -q "MY_IMPORTANT_VAR" "$TEST_PROFILE"
    grep -q "myalias" "$TEST_PROFILE"

    # Check backup was still created
    [ -f "$TEST_PROFILE.llvmup-backup" ]
}

@test "handles missing profile file gracefully" {
    # Test with non-existent file
    source "$UNINSTALL_SCRIPT"
    safe_remove_from_profile "$TEST_TEMP_DIR/nonexistent"

    # Should not create anything or fail
    [ ! -f "$TEST_TEMP_DIR/nonexistent" ]
    [ ! -f "$TEST_TEMP_DIR/nonexistent.llvmup-backup" ]
}

@test "preserves complex user configuration around LLVM section" {
    # Create a complex profile with LLVM in the middle
    cat > "$TEST_PROFILE" << 'EOF'
# User's initial settings
export PATH="$HOME/bin:$PATH"
export EDITOR="vim"

# Some function
my_function() {
    echo "user function"
}

# LLVM Manager Functions - Start
# Auto-generated by LLVMUP installer - safe to remove
if [ -f "$HOME/.local/bin/llvm-functions.sh" ]; then
    source "$HOME/.local/bin/llvm-functions.sh"
fi
# LLVM Manager Functions - End

# More user settings after LLVM
alias ll='ls -la'
export IMPORTANT_PATH="/usr/local/important"

# Final user configuration
if [ -f ~/.bashrc.local ]; then
    source ~/.bashrc.local
fi
EOF

    # Test the safe removal function
    source "$UNINSTALL_SCRIPT"
    safe_remove_from_profile "$TEST_PROFILE"

    # Check that LLVM config is completely removed
    ! grep -q "LLVM Manager Functions" "$TEST_PROFILE"
    ! grep -q "llvm-functions.sh" "$TEST_PROFILE"

    # Check all user content is preserved
    grep -q "export PATH=" "$TEST_PROFILE"
    grep -q "export EDITOR=" "$TEST_PROFILE"
    grep -q "my_function()" "$TEST_PROFILE"
    grep -q "alias ll=" "$TEST_PROFILE"
    grep -q "IMPORTANT_PATH=" "$TEST_PROFILE"
    grep -q "bashrc.local" "$TEST_PROFILE"
}
