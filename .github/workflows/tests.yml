name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq curl

    - name: Install BATS
      run: |
        # Create local bin directory
        mkdir -p ~/.local/bin
        # Clone and install BATS to user directory
        git clone https://github.com/bats-core/bats-core.git
        cd bats-core
        # Create necessary directories with proper permissions
        mkdir -p ~/.local/lib/bats-core
        mkdir -p ~/.local/libexec
        mkdir -p ~/.local/share/man/man7
        # Install to local directory
        ./install.sh ~/.local
        cd ..
        rm -rf bats-core
        # Add to PATH
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        # Verify installation
        echo "Verifying BATS installation..."
        which bats || echo "BATS not found in PATH"
        echo "Current PATH: $PATH"
        # List installed files
        echo "Installed files:"
        ls -la ~/.local/bin/bats
        ls -la ~/.local/lib/bats-core/

    - name: Run BATS tests
      run: |
        # Ensure PATH is updated in this step
        export PATH="$HOME/.local/bin:$PATH"
        echo "Running tests with PATH: $PATH"
        echo ""
        echo "Available test files:"
        ls -la tests/unit/*.bats
        echo ""

        # Run the test runner script
        chmod +x tests/run_tests.sh
        ./tests/run_tests.sh
      continue-on-error: false

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bats-test-results
        path: |
          tests/unit/*.bats
          tests/run_tests.sh

  test-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Pester
      shell: pwsh
      run: |
        Install-Module -Name Pester -Force -SkipPublisherCheck
        Import-Module Pester

    - name: Run Pester tests
      shell: pwsh
      run: |
        $result = Invoke-Pester tests/unit/*.Tests.ps1 -Output Detailed -PassThru
        if ($result.FailedCount -gt 0) {
          Write-Error "Pester tests failed: $($result.FailedCount) test(s) failed"
          exit 1
        }
        Write-Host "All tests passed successfully!"
