#!/bin/bash
# test-activation-flow.sh: Teste do fluxo completo de ativa√ß√£o/desativa√ß√£o

echo "=== Teste do Fluxo de Ativa√ß√£o/Desativa√ß√£o LLVM ==="
echo ""

# Carregar fun√ß√µes
if ! source ./llvm-functions.sh 2>/dev/null; then
    echo "‚ùå Erro ao carregar fun√ß√µes LLVM"
    exit 1
fi

# Encontrar primeira vers√£o dispon√≠vel
toolchains_dir="$HOME/.llvm/toolchains"
test_version=""

if [ -d "$toolchains_dir" ]; then
    for dir in "$toolchains_dir"/*; do
        if [ -d "$dir" ] && [ -d "$dir/bin" ] && [ -x "$dir/bin/clang" ]; then
            test_version=$(basename "$dir")
            break
        fi
    done
fi

if [ -z "$test_version" ]; then
    echo "‚ùå Nenhuma vers√£o v√°lida encontrada para teste"
    echo "Execute 'llvmup' para instalar uma vers√£o do LLVM"
    exit 1
fi

echo "üß™ Usando vers√£o para teste: $test_version"
echo ""

# Salvar estado inicial
initial_path="$PATH"
initial_cc="$CC"
initial_cxx="$CXX"
initial_ld="$LD"
initial_ps1="$PS1"

echo "1. Estado inicial:"
echo "  PATH (primeiros 100 chars): ${PATH:0:100}..."
echo "  CC: ${CC:-'(n√£o definido)'}"
echo "  CXX: ${CXX:-'(n√£o definido)'}"
echo "  Status LLVM:"
llvm-status
echo ""

# Testar which commands antes da ativa√ß√£o
echo "2. Comandos 'which' antes da ativa√ß√£o:"
for cmd in clang clang++ clangd; do
    which_result=$(which $cmd 2>/dev/null || echo "n√£o encontrado")
    echo "  which $cmd: $which_result"
done
echo ""

# Simular ativa√ß√£o usando o script diretamente
echo "3. Simulando ativa√ß√£o da vers√£o $test_version..."

# Como n√£o podemos realmente fazer source dentro de uma fun√ß√£o de forma que afete
# o shell pai, vamos simular o que aconteceria
LLVM_DIR="$toolchains_dir/$test_version"

# Simular o que o script de ativa√ß√£o faria
if [ -d "$LLVM_DIR" ]; then
    echo "  ‚úÖ Diret√≥rio LLVM encontrado: $LLVM_DIR"

    # Simular atualiza√ß√µes de vari√°veis
    simulated_path="$LLVM_DIR/bin:$PATH"
    simulated_cc="$LLVM_DIR/bin/clang"
    simulated_cxx="$LLVM_DIR/bin/clang++"

    echo "  üìù PATH seria atualizado para incluir: $LLVM_DIR/bin"
    echo "  üìù CC seria definido como: $simulated_cc"
    echo "  üìù CXX seria definido como: $simulated_cxx"

    # Testar se os bin√°rios existem
    echo ""
    echo "4. Verificando bin√°rios que seriam ativados:"
    for binary in clang clang++ clangd lld llvm-config; do
        binary_path="$LLVM_DIR/bin/$binary"
        if [ -x "$binary_path" ]; then
            echo "  ‚úÖ $binary: $binary_path"
        else
            echo "  ‚ùå $binary: n√£o encontrado ou n√£o execut√°vel"
        fi
    done

    # Testar which com PATH simulado
    echo ""
    echo "5. Comandos 'which' com PATH simulado:"
    for cmd in clang clang++ clangd; do
        which_result=$(PATH="$simulated_path" which $cmd 2>/dev/null || echo "n√£o encontrado")
        echo "  which $cmd: $which_result"
    done

    # Verificar vers√µes
    echo ""
    echo "6. Verificando vers√µes dos bin√°rios:"
    if [ -x "$LLVM_DIR/bin/clang" ]; then
        clang_version=$("$LLVM_DIR/bin/clang" --version 2>/dev/null | head -1)
        echo "  Clang version: $clang_version"
    fi

    if [ -x "$LLVM_DIR/bin/llvm-config" ]; then
        llvm_version=$("$LLVM_DIR/bin/llvm-config" --version 2>/dev/null)
        echo "  LLVM version: $llvm_version"
    fi

else
    echo "  ‚ùå Diret√≥rio LLVM n√£o encontrado: $LLVM_DIR"
fi

echo ""
echo "7. Testando funcionalidade das fun√ß√µes bash:"

# Testar fun√ß√£o de status (deve mostrar que n√£o h√° vers√£o ativa)
echo "  Status atual:"
llvm-status

# Testar fun√ß√£o de listagem
echo ""
echo "  Vers√µes dispon√≠veis:"
llvm-list

echo ""
echo "8. Verificando integridade do ambiente:"
echo "  PATH ainda est√° intacto: $([ "$PATH" = "$initial_path" ] && echo "‚úÖ Sim" || echo "‚ùå N√£o")"
echo "  CC ainda est√° intacto: $([ "$CC" = "$initial_cc" ] && echo "‚úÖ Sim" || echo "‚ùå N√£o")"
echo "  CXX ainda est√° intacto: $([ "$CXX" = "$initial_cxx" ] && echo "‚úÖ Sim" || echo "‚ùå N√£o")"

echo ""
echo "=== Teste do Fluxo Conclu√≠do ==="
echo ""
echo "üí° Nota: Este teste simula o comportamento dos scripts sem realmente"
echo "    modificar o ambiente atual. Para teste real, use:"
echo "    source llvm-activate $test_version"
echo "    llvm-status"
echo "    source llvm-deactivate"
